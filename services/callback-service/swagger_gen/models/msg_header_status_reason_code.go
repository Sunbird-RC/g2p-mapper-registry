// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MsgHeaderStatusReasonCode Message header related common status reason codes
//
// swagger:model MsgHeaderStatusReasonCode
type MsgHeaderStatusReasonCode string

func NewMsgHeaderStatusReasonCode(value MsgHeaderStatusReasonCode) *MsgHeaderStatusReasonCode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated MsgHeaderStatusReasonCode.
func (m MsgHeaderStatusReasonCode) Pointer() *MsgHeaderStatusReasonCode {
	return &m
}

const (

	// MsgHeaderStatusReasonCodeRjctDotVersionDotInvalid captures enum value "rjct.version.invalid"
	MsgHeaderStatusReasonCodeRjctDotVersionDotInvalid MsgHeaderStatusReasonCode = "rjct.version.invalid"

	// MsgHeaderStatusReasonCodeRjctDotMessageIDDotDuplicate captures enum value "rjct.message_id.duplicate"
	MsgHeaderStatusReasonCodeRjctDotMessageIDDotDuplicate MsgHeaderStatusReasonCode = "rjct.message_id.duplicate"

	// MsgHeaderStatusReasonCodeRjctDotMessageTsDotInvalid captures enum value "rjct.message_ts.invalid"
	MsgHeaderStatusReasonCodeRjctDotMessageTsDotInvalid MsgHeaderStatusReasonCode = "rjct.message_ts.invalid"

	// MsgHeaderStatusReasonCodeRjctDotActionDotInvalid captures enum value "rjct.action.invalid"
	MsgHeaderStatusReasonCodeRjctDotActionDotInvalid MsgHeaderStatusReasonCode = "rjct.action.invalid"

	// MsgHeaderStatusReasonCodeRjctDotActionDotNotSupported captures enum value "rjct.action.not_supported"
	MsgHeaderStatusReasonCodeRjctDotActionDotNotSupported MsgHeaderStatusReasonCode = "rjct.action.not_supported"

	// MsgHeaderStatusReasonCodeRjctDotTotalCountDotInvalid captures enum value "rjct.total_count.invalid"
	MsgHeaderStatusReasonCodeRjctDotTotalCountDotInvalid MsgHeaderStatusReasonCode = "rjct.total_count.invalid"

	// MsgHeaderStatusReasonCodeRjctDotTotalCountDotLimitExceeded captures enum value "rjct.total_count.limit_exceeded"
	MsgHeaderStatusReasonCodeRjctDotTotalCountDotLimitExceeded MsgHeaderStatusReasonCode = "rjct.total_count.limit_exceeded"

	// MsgHeaderStatusReasonCodeRjctDotErrorsDotTooMany captures enum value "rjct.errors.too_many"
	MsgHeaderStatusReasonCodeRjctDotErrorsDotTooMany MsgHeaderStatusReasonCode = "rjct.errors.too_many"
)

// for schema
var msgHeaderStatusReasonCodeEnum []interface{}

func init() {
	var res []MsgHeaderStatusReasonCode
	if err := json.Unmarshal([]byte(`["rjct.version.invalid","rjct.message_id.duplicate","rjct.message_ts.invalid","rjct.action.invalid","rjct.action.not_supported","rjct.total_count.invalid","rjct.total_count.limit_exceeded","rjct.errors.too_many"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		msgHeaderStatusReasonCodeEnum = append(msgHeaderStatusReasonCodeEnum, v)
	}
}

func (m MsgHeaderStatusReasonCode) validateMsgHeaderStatusReasonCodeEnum(path, location string, value MsgHeaderStatusReasonCode) error {
	if err := validate.EnumCase(path, location, value, msgHeaderStatusReasonCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this msg header status reason code
func (m MsgHeaderStatusReasonCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMsgHeaderStatusReasonCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this msg header status reason code based on context it is used
func (m MsgHeaderStatusReasonCode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
