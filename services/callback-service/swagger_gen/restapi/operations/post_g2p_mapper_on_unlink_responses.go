// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostG2pMapperOnUnlinkUnauthorizedCode is the HTTP code returned for type PostG2pMapperOnUnlinkUnauthorized
const PostG2pMapperOnUnlinkUnauthorizedCode int = 401

/*
PostG2pMapperOnUnlinkUnauthorized HTTP layer error details

swagger:response postG2pMapperOnUnlinkUnauthorized
*/
type PostG2pMapperOnUnlinkUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperOnUnlinkUnauthorizedBody `json:"body,omitempty"`
}

// NewPostG2pMapperOnUnlinkUnauthorized creates PostG2pMapperOnUnlinkUnauthorized with default headers values
func NewPostG2pMapperOnUnlinkUnauthorized() *PostG2pMapperOnUnlinkUnauthorized {

	return &PostG2pMapperOnUnlinkUnauthorized{}
}

// WithPayload adds the payload to the post g2p mapper on unlink unauthorized response
func (o *PostG2pMapperOnUnlinkUnauthorized) WithPayload(payload *PostG2pMapperOnUnlinkUnauthorizedBody) *PostG2pMapperOnUnlinkUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper on unlink unauthorized response
func (o *PostG2pMapperOnUnlinkUnauthorized) SetPayload(payload *PostG2pMapperOnUnlinkUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperOnUnlinkUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pMapperOnUnlinkForbiddenCode is the HTTP code returned for type PostG2pMapperOnUnlinkForbidden
const PostG2pMapperOnUnlinkForbiddenCode int = 403

/*
PostG2pMapperOnUnlinkForbidden HTTP layer error details

swagger:response postG2pMapperOnUnlinkForbidden
*/
type PostG2pMapperOnUnlinkForbidden struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperOnUnlinkForbiddenBody `json:"body,omitempty"`
}

// NewPostG2pMapperOnUnlinkForbidden creates PostG2pMapperOnUnlinkForbidden with default headers values
func NewPostG2pMapperOnUnlinkForbidden() *PostG2pMapperOnUnlinkForbidden {

	return &PostG2pMapperOnUnlinkForbidden{}
}

// WithPayload adds the payload to the post g2p mapper on unlink forbidden response
func (o *PostG2pMapperOnUnlinkForbidden) WithPayload(payload *PostG2pMapperOnUnlinkForbiddenBody) *PostG2pMapperOnUnlinkForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper on unlink forbidden response
func (o *PostG2pMapperOnUnlinkForbidden) SetPayload(payload *PostG2pMapperOnUnlinkForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperOnUnlinkForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pMapperOnUnlinkInternalServerErrorCode is the HTTP code returned for type PostG2pMapperOnUnlinkInternalServerError
const PostG2pMapperOnUnlinkInternalServerErrorCode int = 500

/*
PostG2pMapperOnUnlinkInternalServerError HTTP layer error details

swagger:response postG2pMapperOnUnlinkInternalServerError
*/
type PostG2pMapperOnUnlinkInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperOnUnlinkInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostG2pMapperOnUnlinkInternalServerError creates PostG2pMapperOnUnlinkInternalServerError with default headers values
func NewPostG2pMapperOnUnlinkInternalServerError() *PostG2pMapperOnUnlinkInternalServerError {

	return &PostG2pMapperOnUnlinkInternalServerError{}
}

// WithPayload adds the payload to the post g2p mapper on unlink internal server error response
func (o *PostG2pMapperOnUnlinkInternalServerError) WithPayload(payload *PostG2pMapperOnUnlinkInternalServerErrorBody) *PostG2pMapperOnUnlinkInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper on unlink internal server error response
func (o *PostG2pMapperOnUnlinkInternalServerError) SetPayload(payload *PostG2pMapperOnUnlinkInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperOnUnlinkInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostG2pMapperOnUnlinkDefault Acknowledgement of message received after successful validation of message and signature

swagger:response postG2pMapperOnUnlinkDefault
*/
type PostG2pMapperOnUnlinkDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *PostG2pMapperOnUnlinkDefaultBody `json:"body,omitempty"`
}

// NewPostG2pMapperOnUnlinkDefault creates PostG2pMapperOnUnlinkDefault with default headers values
func NewPostG2pMapperOnUnlinkDefault(code int) *PostG2pMapperOnUnlinkDefault {
	if code <= 0 {
		code = 500
	}

	return &PostG2pMapperOnUnlinkDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post g2p mapper on unlink default response
func (o *PostG2pMapperOnUnlinkDefault) WithStatusCode(code int) *PostG2pMapperOnUnlinkDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post g2p mapper on unlink default response
func (o *PostG2pMapperOnUnlinkDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post g2p mapper on unlink default response
func (o *PostG2pMapperOnUnlinkDefault) WithPayload(payload *PostG2pMapperOnUnlinkDefaultBody) *PostG2pMapperOnUnlinkDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper on unlink default response
func (o *PostG2pMapperOnUnlinkDefault) SetPayload(payload *PostG2pMapperOnUnlinkDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperOnUnlinkDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
