// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostG2pFamapOnSearchUnauthorizedCode is the HTTP code returned for type PostG2pFamapOnSearchUnauthorized
const PostG2pFamapOnSearchUnauthorizedCode int = 401

/*
PostG2pFamapOnSearchUnauthorized HTTP layer error details

swagger:response postG2pFamapOnSearchUnauthorized
*/
type PostG2pFamapOnSearchUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostG2pFamapOnSearchUnauthorizedBody `json:"body,omitempty"`
}

// NewPostG2pFamapOnSearchUnauthorized creates PostG2pFamapOnSearchUnauthorized with default headers values
func NewPostG2pFamapOnSearchUnauthorized() *PostG2pFamapOnSearchUnauthorized {

	return &PostG2pFamapOnSearchUnauthorized{}
}

// WithPayload adds the payload to the post g2p famap on search unauthorized response
func (o *PostG2pFamapOnSearchUnauthorized) WithPayload(payload *PostG2pFamapOnSearchUnauthorizedBody) *PostG2pFamapOnSearchUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p famap on search unauthorized response
func (o *PostG2pFamapOnSearchUnauthorized) SetPayload(payload *PostG2pFamapOnSearchUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pFamapOnSearchUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pFamapOnSearchForbiddenCode is the HTTP code returned for type PostG2pFamapOnSearchForbidden
const PostG2pFamapOnSearchForbiddenCode int = 403

/*
PostG2pFamapOnSearchForbidden HTTP layer error details

swagger:response postG2pFamapOnSearchForbidden
*/
type PostG2pFamapOnSearchForbidden struct {

	/*
	  In: Body
	*/
	Payload *PostG2pFamapOnSearchForbiddenBody `json:"body,omitempty"`
}

// NewPostG2pFamapOnSearchForbidden creates PostG2pFamapOnSearchForbidden with default headers values
func NewPostG2pFamapOnSearchForbidden() *PostG2pFamapOnSearchForbidden {

	return &PostG2pFamapOnSearchForbidden{}
}

// WithPayload adds the payload to the post g2p famap on search forbidden response
func (o *PostG2pFamapOnSearchForbidden) WithPayload(payload *PostG2pFamapOnSearchForbiddenBody) *PostG2pFamapOnSearchForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p famap on search forbidden response
func (o *PostG2pFamapOnSearchForbidden) SetPayload(payload *PostG2pFamapOnSearchForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pFamapOnSearchForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pFamapOnSearchInternalServerErrorCode is the HTTP code returned for type PostG2pFamapOnSearchInternalServerError
const PostG2pFamapOnSearchInternalServerErrorCode int = 500

/*
PostG2pFamapOnSearchInternalServerError HTTP layer error details

swagger:response postG2pFamapOnSearchInternalServerError
*/
type PostG2pFamapOnSearchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostG2pFamapOnSearchInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostG2pFamapOnSearchInternalServerError creates PostG2pFamapOnSearchInternalServerError with default headers values
func NewPostG2pFamapOnSearchInternalServerError() *PostG2pFamapOnSearchInternalServerError {

	return &PostG2pFamapOnSearchInternalServerError{}
}

// WithPayload adds the payload to the post g2p famap on search internal server error response
func (o *PostG2pFamapOnSearchInternalServerError) WithPayload(payload *PostG2pFamapOnSearchInternalServerErrorBody) *PostG2pFamapOnSearchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p famap on search internal server error response
func (o *PostG2pFamapOnSearchInternalServerError) SetPayload(payload *PostG2pFamapOnSearchInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pFamapOnSearchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostG2pFamapOnSearchDefault Acknowledgement of message received after successful validation of message and signature

swagger:response postG2pFamapOnSearchDefault
*/
type PostG2pFamapOnSearchDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *PostG2pFamapOnSearchDefaultBody `json:"body,omitempty"`
}

// NewPostG2pFamapOnSearchDefault creates PostG2pFamapOnSearchDefault with default headers values
func NewPostG2pFamapOnSearchDefault(code int) *PostG2pFamapOnSearchDefault {
	if code <= 0 {
		code = 500
	}

	return &PostG2pFamapOnSearchDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post g2p famap on search default response
func (o *PostG2pFamapOnSearchDefault) WithStatusCode(code int) *PostG2pFamapOnSearchDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post g2p famap on search default response
func (o *PostG2pFamapOnSearchDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post g2p famap on search default response
func (o *PostG2pFamapOnSearchDefault) WithPayload(payload *PostG2pFamapOnSearchDefaultBody) *PostG2pFamapOnSearchDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p famap on search default response
func (o *PostG2pFamapOnSearchDefault) SetPayload(payload *PostG2pFamapOnSearchDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pFamapOnSearchDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
