PWD := $(shell pwd)
source := $(wildcard *.go **/*.go */*/*.go)
ifeq ($(SPEC_FILE), )
SPEC_FILE := $(PWD)/swagger.yml
endif

all: mapper-service

deps:
	go install github.com/go-swagger/go-swagger/cmd/swagger@v0.30.4

swagger_gen/restapi/server.go: . $(SPEC_FILE)
	@mkdir $(PWD)/swagger_gen || echo 'exists'
	@$(GOPATH)/bin/swagger generate server -t ./swagger_gen -f  $(SPEC_FILE) --exclude-main -A mapper-service

mapper-service: $(source) swagger_gen/restapi/server.go
	@echo "Building Server to $(PWD)/mapper-service ..."
	@CGO_ENABLED=1 GO111MODULE=on go build github.com/sunbirdrc/mapper-service/cmd/mapper-service

build: mapper-service
	@echo "building $(source)"
	@echo $(source)


clean:
	@echo "Cleaning up all the generated files"
	@find . -name '*.test' | xargs rm -fv
	@rm -rf build
	@rm -rf release
	#@rm `find swagger_gen|grep -v configure_notification_service`
	@rm  `grep -lr '// Code generated by go-swagger; DO NOT EDIT.' swagger_gen`

run: ./mapper-service
	@echo "Running api server"
	./mapper-service --port 8766

docker:
	docker build -t tejashjl/g2p-mapper-service .
