// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostG2pMapperTxnstatusUnauthorizedCode is the HTTP code returned for type PostG2pMapperTxnstatusUnauthorized
const PostG2pMapperTxnstatusUnauthorizedCode int = 401

/*
PostG2pMapperTxnstatusUnauthorized HTTP layer error details

swagger:response postG2pMapperTxnstatusUnauthorized
*/
type PostG2pMapperTxnstatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperTxnstatusUnauthorizedBody `json:"body,omitempty"`
}

// NewPostG2pMapperTxnstatusUnauthorized creates PostG2pMapperTxnstatusUnauthorized with default headers values
func NewPostG2pMapperTxnstatusUnauthorized() *PostG2pMapperTxnstatusUnauthorized {

	return &PostG2pMapperTxnstatusUnauthorized{}
}

// WithPayload adds the payload to the post g2p mapper txnstatus unauthorized response
func (o *PostG2pMapperTxnstatusUnauthorized) WithPayload(payload *PostG2pMapperTxnstatusUnauthorizedBody) *PostG2pMapperTxnstatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper txnstatus unauthorized response
func (o *PostG2pMapperTxnstatusUnauthorized) SetPayload(payload *PostG2pMapperTxnstatusUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperTxnstatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pMapperTxnstatusForbiddenCode is the HTTP code returned for type PostG2pMapperTxnstatusForbidden
const PostG2pMapperTxnstatusForbiddenCode int = 403

/*
PostG2pMapperTxnstatusForbidden HTTP layer error details

swagger:response postG2pMapperTxnstatusForbidden
*/
type PostG2pMapperTxnstatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperTxnstatusForbiddenBody `json:"body,omitempty"`
}

// NewPostG2pMapperTxnstatusForbidden creates PostG2pMapperTxnstatusForbidden with default headers values
func NewPostG2pMapperTxnstatusForbidden() *PostG2pMapperTxnstatusForbidden {

	return &PostG2pMapperTxnstatusForbidden{}
}

// WithPayload adds the payload to the post g2p mapper txnstatus forbidden response
func (o *PostG2pMapperTxnstatusForbidden) WithPayload(payload *PostG2pMapperTxnstatusForbiddenBody) *PostG2pMapperTxnstatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper txnstatus forbidden response
func (o *PostG2pMapperTxnstatusForbidden) SetPayload(payload *PostG2pMapperTxnstatusForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperTxnstatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostG2pMapperTxnstatusInternalServerErrorCode is the HTTP code returned for type PostG2pMapperTxnstatusInternalServerError
const PostG2pMapperTxnstatusInternalServerErrorCode int = 500

/*
PostG2pMapperTxnstatusInternalServerError HTTP layer error details

swagger:response postG2pMapperTxnstatusInternalServerError
*/
type PostG2pMapperTxnstatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostG2pMapperTxnstatusInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostG2pMapperTxnstatusInternalServerError creates PostG2pMapperTxnstatusInternalServerError with default headers values
func NewPostG2pMapperTxnstatusInternalServerError() *PostG2pMapperTxnstatusInternalServerError {

	return &PostG2pMapperTxnstatusInternalServerError{}
}

// WithPayload adds the payload to the post g2p mapper txnstatus internal server error response
func (o *PostG2pMapperTxnstatusInternalServerError) WithPayload(payload *PostG2pMapperTxnstatusInternalServerErrorBody) *PostG2pMapperTxnstatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper txnstatus internal server error response
func (o *PostG2pMapperTxnstatusInternalServerError) SetPayload(payload *PostG2pMapperTxnstatusInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperTxnstatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostG2pMapperTxnstatusDefault Acknowledgement of message received after successful validation of message and signature

swagger:response postG2pMapperTxnstatusDefault
*/
type PostG2pMapperTxnstatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *PostG2pMapperTxnstatusDefaultBody `json:"body,omitempty"`
}

// NewPostG2pMapperTxnstatusDefault creates PostG2pMapperTxnstatusDefault with default headers values
func NewPostG2pMapperTxnstatusDefault(code int) *PostG2pMapperTxnstatusDefault {
	if code <= 0 {
		code = 500
	}

	return &PostG2pMapperTxnstatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post g2p mapper txnstatus default response
func (o *PostG2pMapperTxnstatusDefault) WithStatusCode(code int) *PostG2pMapperTxnstatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post g2p mapper txnstatus default response
func (o *PostG2pMapperTxnstatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post g2p mapper txnstatus default response
func (o *PostG2pMapperTxnstatusDefault) WithPayload(payload *PostG2pMapperTxnstatusDefaultBody) *PostG2pMapperTxnstatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post g2p mapper txnstatus default response
func (o *PostG2pMapperTxnstatusDefault) SetPayload(payload *PostG2pMapperTxnstatusDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostG2pMapperTxnstatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
